.flexContainer{
    display:flex;
    background-color:#a4a4a4;
    margin:10px; padding:20px;
}
/* 
    기본개념
      1. 부모요소에 display:flex or inline-flex로 지정되어야 한다.
      2. 자동으로 자식요소가 모두 flexItem이 된다.
*/
.flexItem{
    margin:10px; padding:20px; color:#fff; background:#000;
}

.flexContainer.justify{
    justify-content:space-evenly;

    /* 
        justify-content: 수평 정렬
            -flex-container의 main-axis 기준으로 flexItem을 수평정렬
            * flex-start : 시작점(X축기준 좌측) 기준 정렬
            * flex-end : 종료점(X축기준 우측) 기준 정렬
            * center : 중앙 기준 정렬
            * space-around : 모두 좌우로 동일한 간격을 가져감.
            * space-between : 첫번째 Item은 좌측기준, 마지막 Item은 우측기준, 
                            나머지 동일한 간격 배치
            * space-evenly : 모든 간격 동일
    */
}

.flexContainer.direction{
    height:500px;
    flex-direction: column-reverse;
    justify-content: space-evenly;
    /* 
        ?flex-direction : 
            - flexContainer의 주 축(main-axis) 방향 설정
            * row : left to right
            * row-reverse : right to left
            * column : top to bottom
            * column-reverse : bottom to top
        direction 이 바뀌었을 경우 => justify-content의 간격 방향도 같이 변경(main-axis를 기준으로 하기 때문)
    */
}
.flexContainer.alignItems{
    /* 
        align-items: stretch; 기본값 
        flex-direction:row-reverse; 
        justify-content: flex-end; 여백을 처음 혹은 끝에 몰아주는거
    */
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height:600px;

    /* 
        ?align-items : 
            - flexItem을 flexContainer의 main-axis의 수직방향으로 정렬
            * stretch : cross Start - End (꽉 찬 높이:기본값)
            * flex-start : cross Start 기준 정렬
            * flex-end : cross End 기준 정렬
            * center : flexContainer의 중앙 정렬
    */
}

.flexContainer.wrap{
    flex-wrap: wrap;
    /* 
        ?flex-wrap
        -flexContainer 와 flexItem들의 너비를 비교
         flexItem의 전체 너비 > flexContainer 의 너비일경우,
         한줄로 표현할 것인지, 줄바꿈을 일으킬건지에 대한 설정
         
         *nowarp :개행 X, 1행에 모두 배열(default) => Item 너비 자동축소
         *wrap: width 초과 시 개행
         *wrap-reverse: width 초과시 역순으로 개행

    */
}

.flexContainer.wrap .flexItem{
    width: 20%;
}

.flexContainer.flow{
    /* 
        ?flex-flow
         flex-direction + flex wrap을 줄여쓸수 있다.(shorthand).
         flex-flow: flex-direction flex wrap
    */
}

.flexContainer.alignContent{
    height:400px;
    flex-flow:row;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: flex-end;

    /* 
        !justify-content, align-items 와 유사
        ?align-content
            * flexContainer의 crossAxis를 기준으로 수직정렬
            * stretch : (flexItem 행 간격을 균등하게. cross Start에서 End까지 꽉찬 높이.)
            * flex-start : (flexItem 행 간격 없이 (stack))
            * flex-end : (flexContainer의 cross end 기준으로 행 간격 없이)
            * center : (flexContainer의 cross axis 중앙 기준으로 행 간격 없이)
            * space-between : (첫 행은 flexContainer cross start 기준, 마지막 행은 flexContainer cross end 기준, 나머지 행 균등하게)
            * space-around : (flexContainer 공간안에 모든 행 균등하게)
    */

}

.flexContainer.alignContent .flexItem{
    height: 800px;
    flex-direction: column;
}

.flexContainer.flexShortHand{

}

.flexContainer.flexShortHand .flexItem{
    margin: 0;
    border: 1px solid #fff;
}
.flexContainer.flexShortHand .flexItem:first-child:not(:last-child){
    flex-grow: 0;
}
.flexContainer.flexShortHand .flexItem:last-child{
    flex-grow: 1;
}
body > div:not(:last-of-type){display: none;}