body{
    width:200px; margin:200px auto;
}
div{
    width:100%;
}
div span{
    display:block; width:100%; height:200px;
    animation-iteration-count: infinite;
    animation-duration:3s;
    animation-timing-function: ease-in-out;
}
div.rotater span:nth-child(1){
    background-color:slateblue;
    /* transform-origin:right bottom; */
    animation-name:hori;
}
div.rotater span:nth-child(2){
    background-color:seagreen;
    animation-name: verti;
}
div.rotater span:nth-child(3){
    background-color:darkorchid;
    animation-name:depth;
}
div.rotater span:nth-child(4){
    background-color:firebrick;
    animation-name:rotate3D;
}

@keyframes hori{
    0%{
        transform:rotateX(0deg);
    }
    100%{
        transform:rotateX(360deg);
    }
}
@keyframes verti{
    0%{
        transform:rotateY(0deg);
    }
    100%{
        transform:rotateY(360deg);
    }
}
@keyframes depth{
    0%{
        transform:rotateZ(0deg);
    }
    100%{
        transform:rotateZ(360deg);
    }
}
@keyframes rotate3D{
    0%{
        transform:rotate3d(0, 0, 0, 0deg);
    }
    100%{
        transform:rotate3d(1, 1, 1, 360deg);
    }
    /* 0%{
        transform:rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    100%{
        transform:rotateX(360deg) rotateY(360deg) rotateZ(360deg);
    } */
}
/* 
    rotate3d(X축,Y축,Z축,회전각도)
     : 3개의 축을 동시 운용 할경우(3d) 각 축의 기준점을 기재하면,
     좌표가 생성이 되고, 그 해당 좌표를 기준으로 3d로 회전을 하게 됨
     만약 3개 축이 0일 경우에는 축이 한점에 모이기때문에(축X) 구현이 불가.
*/
.translater,
.center{border:1px solid #000;}
.translater span{
    background: forestgreen; color:#fff;
    animation-name:trans3D;
}
@keyframes trans3D{
    from{
        transform:rotate3d(0, 0, 0, 0deg) translate3d(0, 0, 0) scale3d(0, 0, 0);
    }
    to{
        transform:rotate3d(1, 1, 1, 360deg) translate3d(100px, 100px, 100px) scale3d(1, 1, 1);
    }
}
/* 
    translate3d(X,Y,Z) :
     * 각 축의 값만큼 해당 축으로 이동을 한다.
     ! z축은 깊이를 표현함에 있어서, 단면 디스플레이의 특성상 
     ! 큰 차이를 보이지 못한다.
*/
.center{
    margin:100px 0;
    width:500px; height:500px;
    position:relative; background-color:red;
}
.center span{
    width:200px; height:200px; background-color:gainsboro;
    position:absolute;
    left:50%;
    top:50%;
    transform:translateX(-50%) translateY(-50%);
    /* 
        position, left, top => 부모의 너비를 기준으로 측정.
        transform =>자신의 너비를 기준으로 측정.
    */
}
ul{list-style:none; margin:0; padding:0; border:1px solid #000;}
ul li{
    position:relative; padding-left:20px;
}
ul li:before{
    content:''; display:block; position:absolute;
    width:10px; height:2px; background-color:red;
    left:0; top:50%; transform:translateY(-50%);
}